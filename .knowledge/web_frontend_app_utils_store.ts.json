{"is_source_file": true, "format": "TypeScript", "description": "This file defines data types and in-memory storage functions for a notes application, including functions for creating, reading, updating, and deleting notes and tags, as well as seeding initial data.", "external_files": [], "external_methods": [], "published": ["listTags", "upsertTag", "listNotes", "getNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "export function listTags(): Tag[] { listTags", "description": "Returns all tags sorted by name.", "scope": "", "scopeKind": ""}, {"name": "export function upsertTag(name: string, color?: string): Tag { upsertTag", "description": "Creates a new tag if it does not exist (case-insensitive match), or returns the existing one.", "scope": "", "scopeKind": ""}, {"name": "export function listNotes(filter?: { tagId?: string; query?: string }): Note[] { listNotes", "description": "Returns notes filtered by tag or query, sorted by most recent updatedAt.", "scope": "", "scopeKind": ""}, {"name": "export function getNote(id: string): Note | undefined { getNote", "description": "Retrieves a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export function createNote(input?: Partial<Pick<Note, \"title\" | \"content\" | \"tags\">>): Note { createNote", "description": "Creates a new note with optional initial fields.", "scope": "", "scopeKind": ""}, {"name": "export function updateNote( updateNote", "description": "Updates an existing note; returns the updated note or undefined if not found.", "scope": "", "scopeKind": ""}, {"name": "export function deleteNote(id: string): boolean { deleteNote", "description": "Deletes a note by ID; returns true if deletion was successful.", "scope": "", "scopeKind": ""}, {"name": "(function seed() { seed", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function uid(prefix = \"\"): string { uid", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["uid", "Object.keys", "Object.values", "Object.prototype.find", "Date.now", "notes[...] = ...", "delete notes[...]"], "search-terms": ["store", "notes", "tags", "in-memory store", "CRUD", "seed data", "Note type", "Tag type", "TypeScript store implementation"], "state": 2, "file_id": 15, "knowledge_revision": 43, "git_revision": "", "revision_history": [{"31": ""}, {"43": ""}], "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Tag", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export type Tag = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export function createNote(input?: Partial<Pick<Note, \"title\" | \"content\" | \"tags\">>): Note {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export function deleteNote(id: string): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "existing", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const existing = Object.values(tags).find($/", "language": "TypeScript", "kind": "constant", "scope": "upsertTag", "scopeKind": "function"}, {"_type": "tag", "name": "existing", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const existing = notes[id];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export function getNote(id: string): Note | undefined {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const existing = notes[id];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export function listNotes(filter?: { tagId?: string; query?: string }): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listTags", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export function listTags(): Tag[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "n1", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const n1: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "seed", "scopeKind": "function"}, {"_type": "tag", "name": "n2", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const n2: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "seed", "scopeKind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^const notes: Record<string, Note> = {};$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^    const q = filter.query.toLowerCase();$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "seed", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^(function seed() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "t", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const t: Tag = { id: uid(\"t_\"), name: name.trim(), color };$/", "language": "TypeScript", "kind": "constant", "scope": "upsertTag", "scopeKind": "function"}, {"_type": "tag", "name": "tIdeas", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const tIdeas: Tag = { id: uid(\"t_\"), name: \"Ideas\", color: \"#F59E0B\" };$/", "language": "TypeScript", "kind": "constant", "scope": "seed", "scopeKind": "function"}, {"_type": "tag", "name": "tWork", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const tWork: Tag = { id: uid(\"t_\"), name: \"Work\", color: \"#2563EB\" };$/", "language": "TypeScript", "kind": "constant", "scope": "seed", "scopeKind": "function"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^const tags: Record<string, Tag> = {};$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^    title: patch.title !== undefined ? (patch.title.trim() || \"Untitled\") : existing.title,$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "uid", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^function uid(prefix = \"\"): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export function updateNote($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^  const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "upsertTag", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-16835-16844/web_frontend/app/utils/store.ts", "pattern": "/^export function upsertTag(name: string, color?: string): Tag {$/", "language": "TypeScript", "kind": "function"}], "hash": "353f66c7fd2d0d34b47390ab224ec6a2", "format-version": 4, "code-base-name": "web_frontend", "filename": "web_frontend/app/utils/store.ts"}